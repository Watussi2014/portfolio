version: 2

models:
  - name: snow_address_type
    description: "Table referencing diffrent address type"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: addresstype

  - name: snow_addresses
    description: "Address table"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "addressid"
      - dbt_constraints.foreign_key:
          fk_column_name: addresstype
          pk_table_name: ref('snow_address_type')
          pk_column_name: addresstype
      - dbt_constraints.foreign_key:
          fk_column_name: country_code
          pk_table_name: ref('snow_countries')
          pk_column_name: country_code
  
    
  - name: snow_countries
    description: "List of countries and country code"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "country_code"
      - dbt_constraints.foreign_key:
          fk_column_name: region_code
          pk_table_name: ref('snow_region')
          pk_column_name: region_code

  - name: snow_region
    description: "List of regions and region code"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "region_code"

  - name: snow_business_partners
    description: "Business partners table"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "partnerid"
      - dbt_constraints.foreign_key:
          fk_column_name: partnerrole
          pk_table_name: ref('snow_partner_roles')
          pk_column_name: partnerrole
      - dbt_constraints.foreign_key:
          fk_column_name: addressid
          pk_table_name: ref('snow_addresses')
          pk_column_name: addressid
      - dbt_constraints.foreign_key:
          fk_column_name: createdby
          pk_table_name: ref('snow_employees')
          pk_column_name: employeeid
      - dbt_constraints.foreign_key:
          fk_column_name: changedby
          pk_table_name: ref('snow_employees')
          pk_column_name: employeeid
  
  - name: snow_partner_roles
    description: "Descriptions of partner roles"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "partnerrole"
  
  - name: snow_employees
    description: "Employee table"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "employeeid"
      - dbt_constraints.foreign_key:
          fk_column_name: addressid
          pk_table_name: ref('snow_addresses')
          pk_column_name: addressid

  - name: snow_product_categories
    description: "Table with product categories"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "prodcategoryid"
      - dbt_constraints.foreign_key:
          fk_column_name: createdby
          pk_table_name: ref('snow_employees')
          pk_column_name: employeeid

  - name: snow_product_category_text
    description: "Description of product categories"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "prodcategoryid"
      - dbt_constraints.foreign_key:
          fk_column_name: prodcategoryid
          pk_table_name: ref('snow_product_categories')
          pk_column_name: prodcategoryid
    
  - name: snow_products
    description: "Product table"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "productid"
      - dbt_constraints.foreign_key:
          fk_column_name: prodcategoryid
          pk_table_name: ref('snow_product_categories')
          pk_column_name: prodcategoryid
      - dbt_constraints.foreign_key:
          fk_column_name: createdby
          pk_table_name: ref('snow_employees')
          pk_column_name: employeeid
      - dbt_constraints.foreign_key:
          fk_column_name: changedby
          pk_table_name: ref('snow_employees')
          pk_column_name: employeeid
      - dbt_constraints.foreign_key:
          fk_column_name: supplier_partnerid
          pk_table_name: ref('snow_business_partners')
          pk_column_name: partnerid 
      - dbt_constraints.foreign_key:
          fk_column_name: typecode
          pk_table_name: ref('snow_prod_type')
          pk_column_name: typecode
      - dbt_constraints.foreign_key:
          fk_column_name: taxtariffcode
          pk_table_name: ref('snow_prod_tax')
          pk_column_name: taxtariffcode

  - name: snow_product_texts
    description: " Descriptions of products "
    data_tests:
      - dbt_constraints.foreign_key:
          fk_column_name: productid
          pk_table_name: ref('snow_products')
          pk_column_name: productid

  - name: snow_sales_orders
    description: "Sales order table"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "salesorderid"
      - dbt_constraints.foreign_key:
          fk_column_name: createdby
          pk_table_name: ref('snow_employees')
          pk_column_name: employeeid
      - dbt_constraints.foreign_key:
          fk_column_name: changedby
          pk_table_name: ref('snow_employees')
          pk_column_name: employeeid
      - dbt_constraints.foreign_key:
          fk_column_name: partnerid
          pk_table_name: ref('snow_business_partners')
          pk_column_name: partnerid 
      - dbt_constraints.foreign_key:
          fk_column_name: salesorg
          pk_table_name: ref('snow_region')
          pk_column_name: region_code
      
  
  - name: snow_sales_order_items
    description: "Sales order items table"
    data_tests:
      - dbt_constraints.foreign_key:
          fk_column_name: salesorderid
          pk_table_name: ref('snow_sales_orders')
          pk_column_name: salesorderid
      - dbt_constraints.foreign_key:
          fk_column_name: productid
          pk_table_name: ref('snow_products')
          pk_column_name: productid
  
  - name: snow_prod_tax
    description: "Descriptions of products taxes"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "taxtariffcode"
  - name: snow_prod_type
    description: "Descriptions of products types"
    data_tests:
      - dbt_constraints.primary_key:
          column_name: "typecode"