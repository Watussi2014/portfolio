-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.titles
(
    id character varying(15) NOT NULL,
    title character varying(150) NOT NULL,
    type character varying(20),
    release_year smallint,
    age_certification character varying(20),
    runtime smallint,
    seasons numeric,
    imdb_id character varying(15),
    imdb_score numeric,
    imdb_votes integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.genres
(
    genres character varying(30) NOT NULL,
    PRIMARY KEY (genres)
);

CREATE TABLE IF NOT EXISTS public.production_countries
(
    production_countries character varying(10) NOT NULL,
    PRIMARY KEY (production_countries)
);

CREATE TABLE IF NOT EXISTS public.credits
(
    person_id integer NOT NULL,
    id character varying(15) NOT NULL,
    name character varying(100) NOT NULL,
    "character" character varying(300),
    role character varying(15) NOT NULL
);

CREATE TABLE IF NOT EXISTS public.best_movies
(
    id character varying(15) NOT NULL,
    "MAIN_GENRE" character varying(20),
    "MAIN_PRODUCTION"  character varying(5),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.best_movie_year
(
    id character varying(15) NOT NULL,
    "RELEASE_YEAR" smallint NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.best_shows
(
    id character varying(15) NOT NULL,
    "MAIN_GENRE" character varying(20),
    "MAIN_PRODUCTION" character varying(5),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.best_shows_year
(
    id character varying(15) NOT NULL,
    "RELEASE_YEAR" smallint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.movie_genre
(
    id character varying(15),
    genres character varying(30)
);

CREATE TABLE IF NOT EXISTS public.movie_production
(
    id character varying(15),
    production_countries character varying(10)
);

CREATE TABLE IF NOT EXISTS public.db_users
(
    username character varying(100),
    user_type character varying(10),
    PRIMARY KEY (username)
);

ALTER TABLE IF EXISTS public.credits
    ADD FOREIGN KEY (id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.best_movies
    ADD FOREIGN KEY (id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.best_movie_year
    ADD FOREIGN KEY (id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.best_shows
    ADD FOREIGN KEY (id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.best_shows_year
    ADD FOREIGN KEY (id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.movie_genre
    ADD FOREIGN KEY (genres)
    REFERENCES public.genres (genres) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.movie_genre
    ADD FOREIGN KEY (id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.movie_production
    ADD FOREIGN KEY (production_countries)
    REFERENCES public.production_countries (production_countries) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.movie_production
    ADD FOREIGN KEY (id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;